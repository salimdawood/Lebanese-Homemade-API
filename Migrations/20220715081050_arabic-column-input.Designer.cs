// <auto-generated />
using System;
using LebaneseHomemade.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LebaneseHomemade.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220715081050_arabic-column-input")]
    partial class arabiccolumninput
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LebaneseHomemadeLibrary.CardModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("FaceBookLink")
                        .HasColumnType("nvarchar(2083)");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("nvarchar(2083)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WhatsAppLink")
                        .HasColumnType("nvarchar(2083)");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.MenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.PhotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.TypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.CardModel", b =>
                {
                    b.HasOne("LebaneseHomemadeLibrary.TypeModel", "Type")
                        .WithMany("CardList")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LebaneseHomemadeLibrary.UserModel", "User")
                        .WithMany("CardList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.ItemModel", b =>
                {
                    b.HasOne("LebaneseHomemadeLibrary.MenuModel", "Menu")
                        .WithMany("ItemList")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.MenuModel", b =>
                {
                    b.HasOne("LebaneseHomemadeLibrary.CardModel", "Card")
                        .WithOne("Menu")
                        .HasForeignKey("LebaneseHomemadeLibrary.MenuModel", "CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.PhotoModel", b =>
                {
                    b.HasOne("LebaneseHomemadeLibrary.CardModel", "Card")
                        .WithMany("PhotoList")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.CardModel", b =>
                {
                    b.Navigation("Menu");

                    b.Navigation("PhotoList");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.MenuModel", b =>
                {
                    b.Navigation("ItemList");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.TypeModel", b =>
                {
                    b.Navigation("CardList");
                });

            modelBuilder.Entity("LebaneseHomemadeLibrary.UserModel", b =>
                {
                    b.Navigation("CardList");
                });
#pragma warning restore 612, 618
        }
    }
}
